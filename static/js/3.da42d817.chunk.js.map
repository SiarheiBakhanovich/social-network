{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileStatus.jsx","Components/Profile/ProfileInfo/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","React","Component","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","Post","item","message","likescount","MyPosts","memo","postsElements","posts","p","id","createRef","postsBlock","AddNewPostFormRedux","values","addPost","newPostText","maxLength10","maxLengthCreator","Field","name","component","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.da42d817.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__34qOF\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2YiUB\",\"contact\":\"ProfileInfo_contact__hAUeH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__uWInI\",\"posts\":\"MyPosts_posts__N8DtA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__Mhidp\"};","import React, {useEffect, useState} from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n  const  deactivateEditMode = () => {\r\n        setEditMode(false);\r\n       props.updateStatus(status)\r\n        };\r\n\r\n  const  onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n\r\n             <b>Status : </b>   <span onDoubleClick={activateEditMode}> {props.status || \"-----\"}  </span>\r\n\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}\r\n                />\r\n\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n\r\n        this.props.updateStatus(this.state.status);\r\n\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n     this.setState({\r\n         status: e.currentTarget.value\r\n     });\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n        console.log(\"componentDidUpdate\")\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render\")\r\n\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    \r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}> {this.props.status || \"-----\" }</span>\r\n\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormControl\";\r\nimport s from './ProfileInfo.module.css'\r\n\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormControl.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n\r\n        <div>\r\n            <button>save</button>\r\n        </div>\r\n\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional\r\n                skills</b>: {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n\r\n        </div>\r\n    </form>\r\n\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: \"edit-profile\"}) (ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React, {useState} from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.jpg\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainFotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit =  (formData) => {\r\n        saveProfile(formData).then (\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainFotoSelected}/>}\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={profile} isOwner={isOwner}/>}\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>edit</button>\r\n        </div>}\r\n        <div>\r\n            <div>\r\n                <b>Full name</b>: {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    </div>\r\n        }\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b> : {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div>\r\n                <img src='http://humor.fm/uploads/posts/2015-12/1449044593_4.jpeg'></img>\r\n            </div>\r\n            {props.message}\r\n\r\n            <div>\r\n                <span>like</span>\r\n                {props.likescount}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validator\";\r\nimport {Textarea} from \"../../common/FormsControls/FormControl\";\r\n\r\nconst MyPosts = React.memo( props => {\r\n    \r\n    let postsElements = props.posts.map(p =>\r\n        <Post key={p.id} message={p.message} likescount={p.likescount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n\r\n    }\r\n\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea} placeholder={\"post message\"} validate={[required, maxLength10]}/>\r\n\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n let AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator,} from \"../../../redux/profile-reduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {saveProfile} from \"../../redux/profile-reduser\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n\r\n            <MyPostsContainer/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus,} from \"../../redux/profile-reduser\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile  {...this.props}\r\n                          isOwner={!this.props.match.params.userId}\r\n                          profile={this.props.profile}\r\n                          status={this.props.status}\r\n                          updateStatus={this.props.updateStatus}\r\n                          savePhoto={this.props.savePhoto}/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    //  withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n"],"sourceRoot":""}