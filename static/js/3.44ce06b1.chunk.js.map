{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileStatus.jsx","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","Preloader","className","s","descriptionBlock","src","photos","large","userPhoto","mainPhoto","isOwner","type","target","files","length","savePhoto","Post","item","message","likescount","MyPosts","memo","postsElements","posts","map","p","createRef","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.44ce06b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__34qOF\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2YiUB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__uWInI\",\"posts\":\"MyPosts_posts__N8DtA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__Mhidp\"};","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n\r\n        this.props.updateStatus(this.state.status);\r\n\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n     this.setState({\r\n         status: e.currentTarget.value\r\n     });\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n        console.log(\"componentDidUpdate\")\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render\")\r\n\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    \r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}> {this.props.status || \"-----\" }</span>\r\n\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n  const  deactivateEditMode = () => {\r\n        setEditMode(false);\r\n       props.updateStatus(status)\r\n        };\r\n\r\n  const  onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}> {props.status || \"-----\"}  </span>\r\n\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}\r\n                />\r\n\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.jpg\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainFotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                { props.isOwner && <input type={\"file\"}  onChange={onMainFotoSelected}/>  }\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div>\r\n                <img src='http://humor.fm/uploads/posts/2015-12/1449044593_4.jpeg'></img>\r\n            </div>\r\n            {props.message}\r\n\r\n            <div>\r\n                <span>like</span>\r\n                {props.likescount}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validator\";\r\nimport {Textarea} from \"../../common/FormsControls/FormControl\";\r\n\r\nconst MyPosts = React.memo( props => {\r\n    \r\n    let postsElements = props.posts.map(p =>\r\n        <Post message={p.message} likescount={p.likescount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n\r\n    }\r\n\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea} placeholder={\"post message\"} validate={[required, maxLength10]}/>\r\n\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n let AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator,} from \"../../../redux/profile-reduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n\r\n            <MyPostsContainer/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus,} from \"../../redux/profile-reduser\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile  {...this.props}\r\n                          isOwner={!this.props.match.params.userId}\r\n                          profile={this.props.profile}\r\n                          status={this.props.status}\r\n                          updateStatus={this.props.updateStatus}\r\n                          savePhoto={this.props.savePhoto}/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n    //  withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n"],"sourceRoot":""}