{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/Message/Message.jsx","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Message/AddMessageForm.jsx","Components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","DialogItem","path","id","dialog","to","name","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","newMessageBody","isAuth","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCenKC,EAVC,SAACC,GACb,OACI,yBAAKC,UAAWC,IAAEC,SACbH,EAAMG,U,QCOJC,EAZI,SAACJ,GAEhB,IAAIK,EAAO,YAAcL,EAAMM,GAC/B,OACI,yBAAKL,UAAWC,IAAEK,QACd,kBAAC,IAAD,CAASC,GAAIH,GAAOL,EAAMS,KAA1B,O,iCCHNC,EAAcC,YAAiB,IAiBrBC,cAAU,CAACC,KAAM,wBAAjBD,EAfO,SAACZ,GACpB,OACI,0BAAMc,SAAUd,EAAMe,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBD,KAAK,iBAAiBY,YAAY,wBAG5C,mCAAQ,wCAAR,SC+BEC,EAxCC,SAACtB,GAEb,IAAIuB,EAAQvB,EAAMwB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OACrC,kBAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAMoB,IAAKD,EAAEtB,GAAIA,GAAIsB,EAAEtB,QAG3CwB,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OACvC,kBAAC,EAAD,CAAS7B,QAAS6B,EAAE7B,QAAS0B,IAAKG,EAAE1B,QAEnBiB,EAAMU,eAQ3B,OAAIjC,EAAMkC,OAGN,yBAAKjC,UAAWC,IAAEwB,SACd,yBAAKzB,UAAWC,IAAEiC,cAEbV,GAIL,yBAAKxB,UAAWC,IAAE6B,UACd,6BAAMD,IAGV,kBAAC,EAAD,CAAgBhB,SAnBJ,SAACsB,GACrBpC,EAAMqC,YAAYD,EAAOH,oBAIC,kBAAC,IAAD,CAAUzB,GAAI,Y,wCCvBxC8B,EAA6B,SAACf,GAAD,MAAY,CACzCW,OAAQX,EAAMgB,KAAKL,S,OCoBRM,sBACXC,aAjBkB,SAAClB,GACnB,MAAO,CACLC,YAAaD,EAAMC,gBAIA,SAACkB,GACtB,MAAO,CACHL,YAAa,SAACJ,GACVS,EAASC,YAAmBV,UDVR,SAACW,GAAe,IACtCC,EADqC,uKAGnC,OAAIC,KAAK9C,MAAMkC,OAER,kBAACU,EAAcE,KAAK9C,OAFG,kBAAC,IAAD,CAAUQ,GAAG,eAHR,GACXuC,IAAMH,WAUtC,OAFkCH,YAAQH,EAARG,CAAqCI,KCQ5DL,CAGblB","file":"static/js/4.e08cb6f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__lSwQG\",\"dialogsItems\":\"Dialogs_dialogsItems__3apMp\",\"active\":\"Dialogs_active__30mLu\",\"messages\":\"Dialogs_messages__2PfIV\",\"message\":\"Dialogs_message__1oqZf\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path}>{props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormControl\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validator\"\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50 ]}\r\n                       name=\"newMessageBody\" placeholder=\"Enter your message\"/>\r\n\r\n            </div>\r\n             <div>   <button>Send</button> </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default  reduxForm({form: \"dialogAddMessageForm\"}) (AddMessageForm);\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport AddMessageForm from \"./Message/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d =>\r\n        <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n\r\n\r\n    let messagesElements = state.messages.map(m =>\r\n        <Message message={m.message} key={m.id}  />)\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n\r\n    }\r\n\r\n    if(!props.isAuth ) return <Redirect to={\"/login\"}/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n\r\n                {dialogsElements}\r\n\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if(!this.props.isAuth) return <Redirect to=\"/login\"/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport {sendMessageCreator, } from \"../../redux/dialogs-reduser\"\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n      dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}